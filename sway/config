include ./catppuccin-mocha
include ./kanagawa
include ./outputs
# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# set $browser vivaldi --enable-features=UseOzonePlatform --ozone-platform=wayland --enable-wayland-ime %U
set $browser zen-browser

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | wmenu | xargs swaymsg exec --
set $menu anyrun
set $menu sherlock

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg ~/.config/sway/backgrounds/Small-memory-sunrise.jpg fill
#
# Example configuration:
#

# archdesk
# output DP-1 resolution 1920x1080 position 0,0 transform 270
# output HDMI-A-1 resolution 1920x1080 position 1080,420
# output DP-2 resolution 1920x1080 position 1080,1500
workspace 1 output DP-1
workspace 2 output DP-1
workspace 3 output DP-1
workspace 4 output DP-1
workspace 5 output DP-2
workspace 6 output DP-2
workspace 7 output HDMI-A-1
workspace 8 output HDMI-A-1
workspace 9 output HDMI-A-1
workspace 10 output HDMI-A-1
# # archmini
# workspace 1 output DP-2
# workspace 2 output DP-2
# workspace 3 output DP-2
# workspace 4 output DP-2
# workspace 5 output DP-2
# workspace 6 output HDMI-A-2
# workspace 7 output HDMI-A-2
# workspace 8 output HDMI-A-2
# workspace 9 output HDMI-A-2
# workspace 10 output HDMI-A-2
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
  timeout 1200 'swaymsg "output * power off"' resume 'swaymsg "output * power on"'
  # timeout 600 'swaylock --clock --indicator --screenshots --effect-blur 7x7 --fade-in 0.3' \
  # before-sleep 'swaylock --clock --indicator --screenshots --effect-blur 7x7 --fade-in 0.3'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
exec fcitx5
# exec wl-paste --type text --watch clipist store
# exec wl-paste --type image --watch clipist store
exec udiskie
exec clipse -listen
exec swaync
exec_always --no-startup-id workstyle &> /tmp/workstyle.log
exec /usr/lib/polkit-kde-authentication-agent-1
exec /usr/bin/kdeconnectd
exec sway-audio-idle-inhibit
exec ./scripts/optimize4ExitNode.sh
exec nm-applet --sm-disable &
exec_always ~/.config/sway/scripts/wayvnc_server.sh
exec rm -f /tmp/sovpipe && mkfifo /tmp/sovpipe && tail -f /tmp/sovpipe | sov -t 500
exec --no-startup-id obsidian
exec autotiling
exec nextcloud --background
exec ./scripts/wacom.sh
### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
# input "type:keyboard" {
#     xkb_options caps:nopcaps
# }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "1386:827:Wacom_Intuos_S_2_Pen" {
  map_to_region 0 1150 1080 675
  rotation_angle 270
}
# input "1386:827:Wacom_Intuos_S_2_Pen" {
#   map_to_region 1080 420 1728 1080
#   rotation_angle 270
# }

### Key bindings
#
# Basics:
#
  # Start a terminal
  bindsym $mod+Return exec $term
  # Start web browser
  bindsym $mod+q exec $browser
  # start obsidian
  bindsym $mod+o exec ~/.config/sway/scripts/obsidian.sh
  bindsym $mod+Ctrl+w exec ~/.config/sway/scripts/waydroid.sh
  # start memo
  bindsym $mod+n exec env INSERT_CREATED_HEADER=1 \
  kitty --class nvimfloat \
    --override background_opacity=0.83 \
    --directory=$HOME/Documents/Obsidian/01_Inbox/_Memo \
    nvim $(date +%Y%m%d%H%M).md
  for_window [app_id="nvimfloat"] floating enable, move position center,  resize set 30ppt 60ppt

  # Kill focused window
  bindsym $mod+c kill

  # Start your launcher
  bindsym $mod+d exec $menu

  # Drag floating windows by holding down $mod and left mouse button.
  # Resize them with right mouse button + $mod.
  # Despite the name, also works for non-floating windows.
  # Change normal to inverse to use left mouse button for resizing and right
  # mouse button for dragging.
  floating_modifier $mod normal

  # Reload the configuration file
  bindsym $mod+Shift+c reload

  # Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
  bindsym $mod+Shift+n exec swaynv-client -t -sw

  # custom settings
  bindsym $mod+Shift+v exec kitty clipse
  bindsym $mod+F12 exec ./scripts/wacom.sh
  bindsym $mod+t exec --no-startup-id ~/.config/sway/scripts/translate.sh
#
# Moving around:
#
  # Move your focus around
  bindsym $mod+$left focus left
  bindsym $mod+$down focus down
  bindsym $mod+$up focus up
  bindsym $mod+$right focus right
  # Or use $mod+[up|down|left|right]
  bindsym $mod+Left focus left
  bindsym $mod+Down focus down
  bindsym $mod+Up focus up
  bindsym $mod+Right focus right

  # Move focus to the next or previous workspace
  # bindsym $mod+Shift+minus move workspace prev
  # bindsym $mod+Shift+equal move workspace next

  # Move the focused window with the same, but add Shift
  bindsym $mod+Shift+$left move left
  bindsym $mod+Shift+$down move down
  bindsym $mod+Shift+$up move up
  bindsym $mod+Shift+$right move right
  # Ditto, with arrow keys
  bindsym $mod+Shift+Left move left
  bindsym $mod+Shift+Down move down
  bindsym $mod+Shift+Up move up
  bindsym $mod+Shift+Right move right
#
# Workspaces:
#
  # Switch to workspace
  # bindsym $mod+1 workspace number 1
  # bindsym $mod+2 workspace number 2
  # bindsym $mod+3 workspace number 3
  # bindsym $mod+4 workspace number 4
  # bindsym $mod+5 workspace number 5
  # bindsym $mod+6 workspace number 6
  # bindsym $mod+7 workspace number 7
  # bindsym $mod+8 workspace number 8
  # bindsym $mod+9 workspace number 9
  # bindsym $mod+0 workspace number 10
    # Move focused container to workspace
  bindsym $mod+Shift+1 move container to workspace number 1
  bindsym $mod+Shift+2 move container to workspace number 2
  bindsym $mod+Shift+3 move container to workspace number 3
  bindsym $mod+Shift+4 move container to workspace number 4
  bindsym $mod+Shift+5 move container to workspace number 5
  bindsym $mod+Shift+6 move container to workspace number 6
  bindsym $mod+Shift+7 move container to workspace number 7
  bindsym $mod+Shift+8 move container to workspace number 8
  bindsym $mod+Shift+9 move container to workspace number 9
  bindsym $mod+Shift+0 move container to workspace number 10
  # Note: workspaces can have any name you want, not just numbers.
  # We just use 1-10 as the default.
  # for sov
  bindsym --no-repeat $mod+1 workspace number 1; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+2 workspace number 2; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+3 workspace number 3; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+4 workspace number 4; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+5 workspace number 5; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+6 workspace number 6; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+7 workspace number 7; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+8 workspace number 8; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+9 workspace number 9; exec "echo 1 > /tmp/sovpipe"
  bindsym --no-repeat $mod+0 workspace number 10; exec "echo 1 > /tmp/sovpipe"

  bindsym --release $mod+1 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+2 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+3 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+4 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+5 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+6 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+7 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+8 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+9 exec "echo 0 > /tmp/sovpipe"
  bindsym --release $mod+0 exec "echo 0 > /tmp/sovpipe"
#
# Layout stuff:
#
  # You can "split" the current object of your focus with
  # $mod+b or $mod+v, for horizontal and vertical splits
  # respectively.
  bindsym $mod+b splith
  bindsym $mod+v splitv

  # Switch the current container between different layout styles
  bindsym $mod+s layout stacking
  bindsym $mod+w layout tabbed
  bindsym $mod+e layout toggle split

  # Make the current focus fullscreen
  bindsym $mod+f fullscreen

  # Toggle the current focus between tiling and floating mode
  bindsym $mod+Shift+space floating toggle

  # Swap focus between the tiling area and the floating area
  bindsym $mod+space focus mode_toggle

  # Move focus to the parent container
  bindsym $mod+a focus parent
  bindsym $mod+p exec grim -g "$(slurp)" - | wl-copy
  bindsym $mod+Shift+p exec grim -g "$(slurp)" - | swappy -f -
#
# Scratchpad:
#
  # Sway has a "scratchpad", which is a bag of holding for windows.
  # You can send windows there and get them back later.

  # Move the currently focused window to the scratchpad
  bindsym $mod+Shift+minus move scratchpad

  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
  # left will shrink the containers width
  # right will grow the containers width
  # up will shrink the containers height
  # down will grow the containers height
  bindsym $left resize shrink width 30px
  bindsym $down resize grow height 30px
  bindsym $up resize shrink height 30px
  bindsym $right resize grow width 30px


  # Return to default mode
  bindsym Return mode "default"
  bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

mode "study" {
  bindsym --release $mod+Return exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+q exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+e exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+r exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+c exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+space exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+Return exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+d exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+1 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+2 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+3 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+4 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+5 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+6 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+7 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+8 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+9 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+0 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+1 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+2 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+3 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+4 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+5 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+6 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+7 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+8 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+9 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+0 exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+s exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+f exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+g exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+semicolon exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+slash exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+comma exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+period exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+equal exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+bracketleft exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+bracketright exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+backslash exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+semicolon exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+apostrophe exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+comma exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+period exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+slash exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+grave exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+space exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Tab exec notify-send "Study Mode: Key operations are restricted"
  bindsym --release $mod+Shift+Tab exec notify-send "Study Mode: Key operations are restricted"
}

# Keybinding to start Study Mode (example: $mod+Shift+s)
bindsym $mod+Shift+s exec "kitty --class floating-study-terminal -e ./scripts/start_study_mode.sh"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
  swaybar_command waybar
  position top
}

#
# how it look
#
gaps inner 0
gaps outer 0
default_border pixel 2
# target                 title     bg    text   indicator  border
# client.focused           $lavender $base $text  $rosewater $lavender
# client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
# client.unfocused         $overlay0 $base $text  $rosewater $overlay0
# client.urgent            $peach    $base $peach $overlay0  $peach
# client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
# client.background        $base

# # class                 border  bground text    indicator child_border
# client.focused          $crystalBlue $crystalBlue $fujiWhite     $crystalBlue   $crystalBlue
# client.focused_inactive $sumiInk4   $sumiInk4 $fujiWhite     $sumiInk4   $sumiInk4
# client.unfocused        $bg_2   #282828 #888888 #292D2E   #222222
# client.urgent           #2F343A #CC241D $fg_1   #CC241D   #CC241D
# client.placeholder      #1D2021 #0C0C0C $fg      #000000   #0C0C0C

#
for_window [app_id="kitty"] opacity 0.95 sticky enable
for_window [title="Network Connection"] floating enable, move position center, cursor move up 20
for_window [app_id="one.alynx.showmethekey" title="Floating Window - Show Me The Key"] floating enable, sticky enable
for_window [title="clipse$"] floating enable, move position center, resize set 50ppt 80ppt
for_window [title="Thunar"] floating enable, resize set 60ppt 70ppt
for_window [app_id = "blueman-manager"] floating enable
for_window [app_id = "org.pulseaudio.pavucontrol"] floating enable, move position 70ppt 0ppt
for_window [app_id="obsidian"] move scratchpad

for_window [window_role = "pop-up"] floating enable
for_window [window_role = "bubble"] floating enable
for_window [window_role = "dialog"] floating enable
for_window [window_type = "dialog"] floating enable
for_window [window_role = "task_dialog"] floating enable
for_window [window_type = "menu"] floating enable
for_window [app_id = "floating"] floating enable
for_window [app_id = "floating_update"] floating enable, resize set width 1000px height 600px
for_window [class = "(?i)pinentry"] floating enable
for_window [title = "Administrator privileges required"] floating enable
for_window [app_id = "Bitwarden"] floating enable

# about firefox
for_window [title = "About Mozilla Firefox"] floating enable
for_window [window_role = "About"] floating enable
for_window [app_id="firefox" title="Library"] floating enable, border pixel 1, sticky enable
for_window [app_id="pomodorolm"] floating enable
for_window [app_id="input-remapper-gtk"] floating enable


# add steamos-compositor-plus if you want to use steam
# # about steam
# for_window [class="^Steam$" title="^Friends$"] floating enable
# for_window [class="^Steam$" title="Steam - News"] floating enable
# for_window [class="^Steam$" title=".* - Chat"] floating enable
# for_window [class="^Steam$" title="^Settings$"] floating enable
# for_window [class="^Steam$" title=".* - event started"] floating enable
# for_window [class="^Steam$" title=".* CD key"] floating enable
# for_window [class="^Steam$" title="^Steam - Self Updater$"] floating enable
# for_window [class="^Steam$" title="^Screenshot Uploader$"] floating enable
# for_window [class="^Steam$" title="^Steam Guard - Computer Authorization Required$"] floating enable
# for_window [title="^Steam Keyboard$"] floating enable
# Kittyの翻訳スクラッチパッドウィンドウ
# app_id="translation_kitty" は後でスクリプトで指定します
for_window [app_id="translation_kitty"] floating enable
# ウィンドウの幅と高さ
for_window [app_id="translation_kitty"] resize set 35ppt 70ppt
# 画面中央に配置
for_window [app_id="translation_kitty"] move position center

for_window [app_id="select_language"] floating enable
# ウィンドウの幅と高さ
for_window [app_id="select_language"] resize set 17ppt 10ppt
# 画面中央に配置
for_window [app_id="select_language"] move position center
# これによりスクラッチパッドに送られる
include /etc/sway/config.d/*
